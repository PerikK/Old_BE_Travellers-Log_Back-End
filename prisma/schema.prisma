generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  username     String    @unique
  password     String
  visits       Visit[]
  pictures     Picture[]
  logs         Log[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Visit {
  id           Int       @id @default(autoincrement())
  userId       Int
  locationId   Int
  user         User      @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  location     Location  @relation(fields: [locationId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  pictures     Picture[]
  logs         Log[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  @@unique([userId, locationId])
}

model Location {
  id           Int       @id @default(autoincrement())
  name         String
  visits       Visit[]
  pictures     Picture[]
  logs         Log[]  
}

model Picture {
  id           Int       @id @default(autoincrement())
  userId       Int
  locationId   Int
  url          String
  user         User      @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  location     Location  @relation(fields: [locationId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  visit        Visit?    @relation(fields: [visitId], references: [id])
  visitId      Int?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Log {
  id           Int       @id @default(autoincrement())
  visitId      Int?
  locationId   Int?
  userId       Int?
  logEntries   String[]
  visit        Visit?    @relation(fields: [visitId], references: [id])
  location     Location? @relation(fields: [locationId], references: [id])
  user         User?     @relation(fields: [userId], references: [id])
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}
